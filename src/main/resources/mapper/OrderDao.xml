<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.renren.dao.OrderDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="io.renren.entity.OrderEntity" id="orderMap">
        <result property="orderid" column="orderId"/>
        <result property="ordertype" column="orderType"/>
        <result property="orderbegintime" column="orderBeginTime"/>
        <result property="orderendtime" column="orderEndTime"/>
        <result property="orderdesc" column="orderDesc"/>
        <result property="ordercust" column="orderCust"/>
        <result property="orderstate" column="orderState"/>
        <result property="bz1" column="bz1"/>
        <result property="bz2" column="bz2"/>
        <result property="bz3" column="bz3"/>
    </resultMap>

	<select id="queryObject" resultType="io.renren.entity.OrderEntity">
		select * from order where orderId = #{value}
	</select>

	<select id="queryList" resultType="io.renren.entity.OrderEntity">
		select * from order
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by orderId desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from order 
	</select>
	 
	<insert id="save" parameterType="io.renren.entity.OrderEntity">
		insert into order
		(
			`orderId`, 
			`orderType`, 
			`orderBeginTime`, 
			`orderEndTime`, 
			`orderDesc`, 
			`orderCust`, 
			`orderState`, 
			`bz1`, 
			`bz2`, 
			`bz3`
		)
		values
		(
			#{orderid}, 
			#{ordertype}, 
			#{orderbegintime}, 
			#{orderendtime}, 
			#{orderdesc}, 
			#{ordercust}, 
			#{orderstate}, 
			#{bz1}, 
			#{bz2}, 
			#{bz3}
		)
	</insert>
	 
	<update id="update" parameterType="io.renren.entity.OrderEntity">
		update order 
		<set>
			<if test="ordertype != null">`orderType` = #{ordertype}, </if>
			<if test="orderbegintime != null">`orderBeginTime` = #{orderbegintime}, </if>
			<if test="orderendtime != null">`orderEndTime` = #{orderendtime}, </if>
			<if test="orderdesc != null">`orderDesc` = #{orderdesc}, </if>
			<if test="ordercust != null">`orderCust` = #{ordercust}, </if>
			<if test="orderstate != null">`orderState` = #{orderstate}, </if>
			<if test="bz1 != null">`bz1` = #{bz1}, </if>
			<if test="bz2 != null">`bz2` = #{bz2}, </if>
			<if test="bz3 != null">`bz3` = #{bz3}</if>
		</set>
		where orderId = #{orderid}
	</update>
	
	<delete id="delete">
		delete from order where orderId = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from order where orderId in 
		<foreach item="orderid" collection="array" open="(" separator="," close=")">
			#{orderid}
		</foreach>
	</delete>

</mapper>